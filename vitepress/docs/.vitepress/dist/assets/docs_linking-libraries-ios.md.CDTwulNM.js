import{_ as a,c as e,o,a4 as s}from"./chunks/framework.nQaBHiNx.js";const i="/assets/321053647-821ddb0c-400a-4139-8e72-56f6ed73743c.vAP2jue7.png",c="/assets/321053704-feda8ef3-32b9-484c-8413-23d09d8d08d3.xRS3UhYx.png",t="/assets/321054351-b9a3e3bb-5c9b-43a7-9819-f638fbfa64a9.DYWMGxS_.png",k=JSON.parse('{"title":"Vinculando Bibliotecas","description":"","frontmatter":{},"headers":[],"relativePath":"docs/linking-libraries-ios.md","filePath":"docs/linking-libraries-ios.md"}'),r={name:"docs/linking-libraries-ios.md"},n=s('<h1 id="vinculando-bibliotecas" tabindex="-1">Vinculando Bibliotecas <a class="header-anchor" href="#vinculando-bibliotecas" aria-label="Permalink to &quot;Vinculando Bibliotecas&quot;">​</a></h1><p>Nem todo aplicativo usa todos os recursos nativos, e incluir o código para suportar todos esses recursos afetaria o tamanho binário... Mas ainda queremos oferecer suporte à adição desses recursos sempre que você precisar deles.</p><p>Com isso em mente, expusemos muitos desses recursos como bibliotecas estáticas independentes.</p><p>Para a maioria das bibliotecas será tão rápido quanto arrastar dois arquivos, às vezes será necessário um terceiro passo, mas não mais que isso.</p><div class="info custom-block"><p class="custom-block-title">Observação</p><p>Todas as bibliotecas que enviamos com o React Native ficam na pasta <code>Libraries</code> na raiz do repositório. Alguns deles são JavaScript puro e você só precisa usar o <code>require</code>. Outras bibliotecas também dependem de algum código nativo; nesse caso, você terá que adicionar esses arquivos ao seu aplicativo, caso contrário, o aplicativo gerará um erro assim que você tentar usar a biblioteca.</p></div><h2 id="aqui-estao-algumas-etapas-para-vincular-suas-bibliotecas-que-contem-codigo-nativo" tabindex="-1">Aqui estão algumas etapas para vincular suas bibliotecas que contêm código nativo <a class="header-anchor" href="#aqui-estao-algumas-etapas-para-vincular-suas-bibliotecas-que-contem-codigo-nativo" aria-label="Permalink to &quot;Aqui estão algumas etapas para vincular suas bibliotecas que contêm código nativo&quot;">​</a></h2><h3 id="vinculacao-automatica" tabindex="-1">Vinculação automática <a class="header-anchor" href="#vinculacao-automatica" aria-label="Permalink to &quot;Vinculação automática&quot;">​</a></h3><p>Instale uma biblioteca com dependências nativas:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">library-with-native-dependencie</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">Informações</p><p>O sinalizador <code>--save</code> ou <code>--save-dev</code> é muito importante para esta etapa. React Native vinculará suas bibliotecas com base em <code>dependencies</code> e <code>devDependencies</code> em seu arquivo <code>package.json</code>.</p></div><p>É isso! Na próxima vez que você criar seu aplicativo, o código nativo será vinculado graças ao mecanismo <a href="https://github.com/react-native-community/cli/blob/main/docs/autolinking.md" target="_blank" rel="noreferrer">autolinking</a>.</p><h3 id="vinculacao-manual" tabindex="-1">Vinculação manual <a class="header-anchor" href="#vinculacao-manual" aria-label="Permalink to &quot;Vinculação manual&quot;">​</a></h3><h4 id="passo-1" tabindex="-1">Passo 1 <a class="header-anchor" href="#passo-1" aria-label="Permalink to &quot;Passo 1&quot;">​</a></h4><p>Se a biblioteca possuir código nativo, deve haver um arquivo <code>.xcodeproj</code> dentro de sua pasta. Arraste este arquivo para o seu projeto no Xcode (geralmente no grupo <code>Libraries</code> no Xcode);</p><div class="one-image"><img class="rounded-shadow" src="'+i+'"></div><h4 id="passo-2" tabindex="-1">Passo 2 <a class="header-anchor" href="#passo-2" aria-label="Permalink to &quot;Passo 2&quot;">​</a></h4><p>Clique no arquivo principal do seu projeto (aquele que representa o <code>.xcodeproj</code>) selecione <code>Build Phases</code> e arraste a biblioteca estática da pasta <code>Products</code> dentro da biblioteca que você está importando para <code>Link Binary With Libraries</code></p><div class="one-image"><img class="rounded-shadow" src="'+c+'"></div><h4 id="etapa-3" tabindex="-1">Etapa 3 <a class="header-anchor" href="#etapa-3" aria-label="Permalink to &quot;Etapa 3&quot;">​</a></h4><p>Nem toda biblioteca precisará desta etapa, o que você precisa considerar é:</p><p><em>Preciso conhecer o conteúdo da biblioteca em tempo de compilação?</em></p><p>Isso significa que você está usando esta biblioteca no lado nativo ou apenas em JavaScript? Se você estiver usando apenas em JavaScript, está pronto para prosseguir!</p><p>Se você precisar chamá-lo do nativo, precisaremos saber os cabeçalhos da biblioteca. Para conseguir isso você deve ir ao arquivo do seu projeto, selecionar <code>Build Settings</code> e procurar por <code>Header Search Paths</code>. Lá você deve incluir o caminho para sua biblioteca. (Esta documentação costumava recomendar o uso de <code>recursive</code>, mas isso não é mais recomendado, pois pode causar falhas sutis de compilação, especialmente com CocoaPods.)</p><p><img src="'+t+'" alt="image"></p>',24),d=[n];function l(p,u,m,b,h,v){return o(),e("div",null,d)}const q=a(r,[["render",l]]);export{k as __pageData,q as default};
