import{_ as a}from"./chunks/download.BUUib3PP.js";import{_ as e,c as i,o,a4 as s}from"./chunks/framework.nQaBHiNx.js";const t="/assets/288755758-175ae9d7-3e6d-42ba-9b12-a1e89bf0df53.BLU9lmvg.png",n="/assets/288759376-65fb76bd-40b8-4301-b292-a776ea55f17e.CSnjBM8e.png",f=JSON.parse('{"title":"Android","description":"","frontmatter":{},"headers":[],"relativePath":"docs/environment-setup/mac-os/android.md","filePath":"docs/environment-setup/mac-os/android.md"}'),r={name:"docs/environment-setup/mac-os/android.md"},d=s(`<h1 id="android" tabindex="-1">Android <a class="header-anchor" href="#android" aria-label="Permalink to &quot;Android&quot;">​</a></h1><h2 id="instalando-dependencias" tabindex="-1">Instalando dependências <a class="header-anchor" href="#instalando-dependencias" aria-label="Permalink to &quot;Instalando dependências&quot;">​</a></h2><p>Você precisará do Node, do Watchman, da interface de linha de comando React Native, de um JDK e do Android Studio.</p><p>Embora você possa usar qualquer editor de sua escolha para desenvolver seu aplicativo, você precisará instalar o Android Studio para configurar as ferramentas necessárias para criar seu aplicativo React Native para Android.</p><h2 id="node-watchman" tabindex="-1">Node &amp; Watchman <a class="header-anchor" href="#node-watchman" aria-label="Permalink to &quot;Node &amp; Watchman&quot;">​</a></h2><p>Recomendamos instalar o Node e o Watchman usando o <a href="https://brew.sh/" target="_blank" rel="noreferrer">Homebrew</a>. Execute os seguintes comandos em um Terminal após instalar o Homebrew:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> watchman</span></span></code></pre></div><p>Se você já instalou o Node em seu sistema, certifique-se de que seja o Node 18 ou mais recente.</p><p><a href="https://facebook.github.io/watchman" target="_blank" rel="noreferrer">Watchman</a> é uma ferramenta do Facebook para observar mudanças no sistema de arquivos. É altamente recomendável instalá-lo para melhor desempenho.</p><h2 id="kit-de-desenvolvimento-do-java" tabindex="-1">kit de desenvolvimento do Java <a class="header-anchor" href="#kit-de-desenvolvimento-do-java" aria-label="Permalink to &quot;kit de desenvolvimento do Java&quot;">​</a></h2><p>Recomendamos instalar a distribuição OpenJDK chamada Azul <strong>Zulu</strong> usando <a href="https://brew.sh/" target="_blank" rel="noreferrer">Homebrew</a>. Execute os seguintes comandos em um Terminal após instalar o Homebrew:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tap</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> homebrew/cask-versions</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --cask</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zulu17</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Obtenha o caminho para onde o cask foi instalado para clicar duas vezes no instalador</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> info</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --cask</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zulu17</span></span></code></pre></div><p>Depois de instalar o JDK, atualize sua variável de ambiente <code>JAVA_HOME</code>. Se você usou as etapas acima, o JDK provavelmente estará em <code>/Library/Java/JavaVirtualMachines/zulu-17.jdk/Contents/Home</code></p><p>A distribuição Zulu OpenJDK oferece JDKs para Macs Intel e M1. Isso garantirá que suas compilações sejam mais rápidas em Macs M1 em comparação com o uso de um JDK baseado em Intel.</p><p>Se você já instalou o JDK em seu sistema, recomendamos o JDK 17. Você pode encontrar problemas ao usar versões superiores do JDK.</p><h3 id="_1-instale-o-android-studio" tabindex="-1">1. Instale o Android Studio <a class="header-anchor" href="#_1-instale-o-android-studio" aria-label="Permalink to &quot;1. Instale o Android Studio&quot;">​</a></h3><p><a href="https://developer.android.com/studio/index.html" target="_blank" rel="noreferrer">Baixe e instale o Android Studio</a>. No assistente de instalação do Android Studio, certifique-se de que as caixas ao lado de todos os itens a seguir estejam marcadas:</p><p><code>SDK Android</code><code>Plataforma Android SDK</code><code>Dispositivo virtual Android</code></p><p>Em seguida, clique em &quot;Next&quot; para instalar todos esses componentes.</p><div class="info custom-block"><p class="custom-block-title">Nota</p><p>Se as caixas de seleção estiverem esmaecidas, você terá a chance de instalar esses componentes mais tarde.</p></div><p>Depois que a configuração for finalizada e a tela de boas-vindas for exibida, prossiga para a próxima etapa.</p><h3 id="_2-instale-o-android-sdk" tabindex="-1">2. Instale o Android SDK <a class="header-anchor" href="#_2-instale-o-android-sdk" aria-label="Permalink to &quot;2. Instale o Android SDK&quot;">​</a></h3><p>O Android Studio instala o Android SDK mais recente por padrão. Construir um aplicativo React Native com código nativo, no entanto, requer o SDK do <code>Android 13 (Tiramisu)</code> em particular. SDKs Android adicionais podem ser instalados por meio do SDK Manager no Android Studio.</p><p>Para fazer isso, abra o Android Studio, clique no botão &quot;More Actions&quot; e selecione &quot;SDK Manager&quot;.</p><p><img src="`+t+`" alt="image"></p><div class="info custom-block"><p class="custom-block-title">Nota</p><p>O SDK Manager também pode ser encontrado na caixa de diálogo &quot;Settings&quot; do Android Studio, em <strong>Languages &amp; Frameworks → Android SDK</strong>.</p></div><p>Selecione a guia &quot;Plataformas SDK&quot; no SDK Manager e marque a caixa ao lado de &quot;Mostrar detalhes do pacote&quot; no canto inferior direito. Procure e expanda a entrada <code>Android 13 (Tiramisu)</code> e certifique-se de que os seguintes itens estejam marcados:</p><ul><li><code>Plataforma Android SDK 33</code></li><li>Imagem do sistema <code>Intel x86 Atom_64</code> ou <code>Google APIs Intel x86 Atom System Image</code> ou (para Apple M1 Silicon) <code>Google APIs ARM 64 v8a System Image</code></li></ul><p>Em seguida, selecione a guia &quot;SDK Tools&quot; e marque a caixa ao lado de &quot;Show Package Details&quot; aqui também. Procure e expanda a entrada &quot;Android SDK Build-Tools&quot; e certifique-se de que <code>33.0.0</code> esteja selecionado.</p><p>Por fim, clique em “Apply” para baixar e instalar o Android SDK e ferramentas de construção relacionadas.</p><ol start="3"><li>Configure a variável de ambiente <code>ANDROID_HOME</code> As ferramentas React Native requerem a configuração de algumas variáveis de ambiente para construir aplicativos com código nativo.</li></ol><p>Adicione as seguintes linhas ao seu arquivo de configuração <code>~/.zprofile</code> ou <code>~/.zshrc</code> (se você estiver usando bash, então <code>~/.bash_profile</code> ou <code>~/.bashrc</code>):</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ANDROID_HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Library/Android/sdk</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ANDROID_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/emulator</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ANDROID_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/platform-tools</span></span></code></pre></div><p>Execute <code>source ~/.zprofile</code> (ou <code>source ~/.bash_profile</code> para bash) para carregar a configuração em seu shell atual. Verifique se <code>ANDROID_HOME</code> foi configurado executando <code>echo $ANDROID_HOME</code> e os diretórios apropriados foram adicionados ao seu caminho executando <code>echo $PATH.</code></p><div class="warning custom-block"><p class="custom-block-title">Atenção</p><p>Certifique-se de usar o caminho correto do Android SDK. Você pode encontrar a localização real do SDK na caixa de diálogo &quot;<strong>Settings</strong>&quot; do <strong>Languages &amp; Frameworks → Android SDK</strong>.</p></div><h2 id="interface-de-linha-de-comando-nativa-do-react" tabindex="-1">Interface de linha de comando nativa do React <a class="header-anchor" href="#interface-de-linha-de-comando-nativa-do-react" aria-label="Permalink to &quot;Interface de linha de comando nativa do React&quot;">​</a></h2><p>React Native possui uma interface de linha de comando integrada. Em vez de instalar e gerenciar uma versão específica da CLI globalmente, recomendamos que você acesse a versão atual em tempo de execução usando <code>npx</code>, que acompanha o Node.js. Com <code>npx react-native &lt;command&gt;</code>, a versão estável atual da CLI será baixada e executada no momento em que o comando for executado.</p><h2 id="criando-um-novo-aplicativo" tabindex="-1">Criando um novo aplicativo <a class="header-anchor" href="#criando-um-novo-aplicativo" aria-label="Permalink to &quot;Criando um novo aplicativo&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">Atenção</p><p>Se você instalou anteriormente um pacote global <code>react-native-cli</code>, remova-o, pois pode causar problemas inesperados:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uninstall</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> react-native-cli</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @react-native-community/cli</span></span></code></pre></div></div><p>React Native possui uma interface de linha de comando integrada, que você pode usar para gerar um novo projeto. Você pode acessá-lo sem instalar nada globalmente usando o <code>npx</code>, que acompanha o Node.js. Vamos criar um novo projeto React Native chamado &quot;AwesomeProject&quot;:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> react-native@latest</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> AwesomeProject</span></span></code></pre></div><p>Isso não é necessário se você estiver integrando o React Native em um aplicativo existente, se você &quot;expulsou&quot; da Expo ou se estiver adicionando suporte Android a um projeto React Native existente (consulte <a href="/docs/integration-with-existing-apps.html">Integração com aplicativos existentes</a>). Você também pode usar uma CLI de terceiros para iniciar seu aplicativo React Native, como <a href="https://github.com/infinitered/ignite" target="_blank" rel="noreferrer">Ignite CLI</a>.</p><h2 id="opcional-usando-uma-versao-ou-modelo-especifico" tabindex="-1">[Opcional] Usando uma versão ou modelo específico <a class="header-anchor" href="#opcional-usando-uma-versao-ou-modelo-especifico" aria-label="Permalink to &quot;[Opcional] Usando uma versão ou modelo específico&quot;">​</a></h2><p>Se quiser iniciar um novo projeto com uma versão específica do React Native, você pode usar o argumento <code>--version</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> react-native@X.XX.X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> AwesomeProject</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> X.XX.X</span></span></code></pre></div><p>Você também pode iniciar um projeto com um modelo React Native personalizado com o argumento <code>--template</code>.</p><h2 id="preparando-o-dispositivo-android" tabindex="-1">Preparando o dispositivo Android <a class="header-anchor" href="#preparando-o-dispositivo-android" aria-label="Permalink to &quot;Preparando o dispositivo Android&quot;">​</a></h2><p>Você precisará de um dispositivo Android para executar seu aplicativo React Native para Android. Pode ser um dispositivo Android físico ou, mais comumente, você pode usar um dispositivo virtual Android que permite emular um dispositivo Android em seu computador.</p><p>De qualquer forma, você precisará preparar o dispositivo para executar aplicativos Android para desenvolvimento.</p><h3 id="usando-um-dispositivo-fisico" tabindex="-1">Usando um dispositivo físico <a class="header-anchor" href="#usando-um-dispositivo-fisico" aria-label="Permalink to &quot;Usando um dispositivo físico&quot;">​</a></h3><p>Se você tiver um dispositivo Android físico, poderá usá-lo para desenvolvimento no lugar de um AVD, conectando-o ao computador usando um cabo USB e seguindo as instruções <a href="/docs/running-on-device.html">aqui</a>.</p><h3 id="usando-um-dispositivo-virtual" tabindex="-1">Usando um dispositivo virtual <a class="header-anchor" href="#usando-um-dispositivo-virtual" aria-label="Permalink to &quot;Usando um dispositivo virtual&quot;">​</a></h3><p>Se você usar o Android Studio para abrir <code>./AwesomeProject/android</code>, poderá ver a lista de dispositivos virtuais Android (AVDs) disponíveis abrindo o &quot;AVD Manager&quot; no Android Studio. Procure um ícone parecido com este:</p><p><img src="`+a+'" alt="image"></p><p>Se você instalou recentemente o Android Studio, provavelmente precisará <a href="https://developer.android.com/studio/run/managing-avds.html" target="_blank" rel="noreferrer">criar um novo AVD</a>. Selecione &quot;Create Virtual Device...&quot;, escolha qualquer telefone da lista e clique em &quot;Next&quot; e selecione a imagem <strong>Tiramisu</strong> API nível 33.</p><p>Clique em “Next” e depois em “Finish” para criar seu AVD. Neste ponto, você poderá clicar no botão de triângulo verde próximo ao seu AVD para iniciá-lo e, em seguida, prosseguir para a próxima etapa.</p><h2 id="executando-seu-aplicativo-react-native" tabindex="-1">Executando seu aplicativo React Native <a class="header-anchor" href="#executando-seu-aplicativo-react-native" aria-label="Permalink to &quot;Executando seu aplicativo React Native&quot;">​</a></h2><h3 id="etapa-1-iniciar-o-metro" tabindex="-1">Etapa 1: iniciar o Metro <a class="header-anchor" href="#etapa-1-iniciar-o-metro" aria-label="Permalink to &quot;Etapa 1: iniciar o Metro&quot;">​</a></h3><p><a href="https://facebook.github.io/metro/" target="_blank" rel="noreferrer">Metro</a> é a ferramenta de construção JavaScript para React Native. Para iniciar o servidor de desenvolvimento Metro, execute o seguinte na pasta do projeto:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-fCimP" id="tab-jUcoaQl" checked="checked"><label for="tab-jUcoaQl">npm</label><input type="radio" name="group-fCimP" id="tab-7xyr8HP"><label for="tab-7xyr8HP">yarn</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span></code></pre></div></div></div><div class="info custom-block"><p class="custom-block-title"><strong>OBSERVAÇÃO</strong></p><p>Se você estiver familiarizado com desenvolvimento web, o Metro é semelhante a empacotadores como Vite e webpack, mas foi projetado de ponta a ponta para React Native. Por exemplo, Metro usa <a href="https://babel.dev/" target="_blank" rel="noreferrer">Babel</a> para transformar sintaxe como JSX em JavaScript executável.</p></div><h3 id="step-2-inicie-sua-aplicacao" tabindex="-1">Step 2: Inicie sua aplicação <a class="header-anchor" href="#step-2-inicie-sua-aplicacao" aria-label="Permalink to &quot;Step 2: Inicie sua aplicação&quot;">​</a></h3><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-JWUH3" id="tab-1_hE8B5" checked="checked"><label for="tab-1_hE8B5">npm</label><input type="radio" name="group-JWUH3" id="tab-mWxbhxQ"><label for="tab-mWxbhxQ">yarn</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> android</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> android</span></span></code></pre></div></div></div><p>Se tudo estiver configurado corretamente, você deverá ver seu novo aplicativo em execução no emulador do Android em breve.</p><p><img src="'+n+'" alt="image"></p><p>Essa é uma maneira de executar seu aplicativo: você também pode executá-lo diretamente no Android Studio.</p><div class="info custom-block"><p class="custom-block-title">Nota</p><p>Se você não conseguir fazer isso funcionar, consulte a página <a href="/docs/troubleshooting.html">Solução de problemas</a>.</p></div><h3 id="modificando-seu-aplicativo" tabindex="-1">Modificando seu aplicativo <a class="header-anchor" href="#modificando-seu-aplicativo" aria-label="Permalink to &quot;Modificando seu aplicativo&quot;">​</a></h3><p>Agora que você executou o aplicativo com sucesso, vamos modificá-lo.</p><ul><li>Abra <code>App.tsx</code> no editor de texto de sua preferência e edite algumas linhas.</li><li>Pressione a tecla <code>R</code> duas vezes ou selecione <code>Reload</code> no menu Dev (<code>Cmd ⌘</code> + <code>M</code>) para ver suas alterações!</li></ul><h2 id="e-isso" tabindex="-1">É isso! <a class="header-anchor" href="#e-isso" aria-label="Permalink to &quot;É isso!&quot;">​</a></h2><p>Parabéns! Você executou e modificou com sucesso seu primeiro aplicativo React Native.</p><p><img src="https://github.com/tavaresgerson/reactnativedocbr/assets/22455192/c6b24c43-2e07-4845-9c2e-133189349b1c" alt="image"></p><h4 id="e-agora" tabindex="-1">E agora? <a class="header-anchor" href="#e-agora" aria-label="Permalink to &quot;E agora?&quot;">​</a></h4><ul><li>Se você deseja adicionar este novo código React Native a um aplicativo existente, consulte o <a href="/docs/integration-with-existing-apps.html">guia de integração</a>.</li></ul><p>Se você estiver curioso para saber mais sobre o React Native, confira a <a href="/docs/getting-started.html">Introdução ao React Native</a>.</p>',76),c=[d];function l(p,h,u,m,v,k){return o(),i("div",null,c)}const F=e(r,[["render",l]]);export{f as __pageData,F as default};
