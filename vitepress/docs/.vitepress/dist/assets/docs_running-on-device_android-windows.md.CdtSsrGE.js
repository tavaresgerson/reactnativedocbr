import{_ as a,c as e,o as i,a4 as s}from"./chunks/framework.nQaBHiNx.js";const m=JSON.parse('{"title":"Windows (Android)","description":"","frontmatter":{},"headers":[],"relativePath":"docs/running-on-device/android-windows.md","filePath":"docs/running-on-device/android-windows.md"}'),o={name:"docs/running-on-device/android-windows.md"},t=s(`<h1 id="windows-android" tabindex="-1">Windows (Android) <a class="header-anchor" href="#windows-android" aria-label="Permalink to &quot;Windows (Android)&quot;">​</a></h1><h2 id="_1-habilite-a-depuracao-via-usb" tabindex="-1">1. Habilite a depuração via USB <a class="header-anchor" href="#_1-habilite-a-depuracao-via-usb" aria-label="Permalink to &quot;1. Habilite a depuração via USB&quot;">​</a></h2><p>A maioria dos dispositivos Android só pode instalar e executar aplicativos baixados do Google Play, por padrão. Você precisará habilitar a depuração USB em seu dispositivo para instalar seu aplicativo durante o desenvolvimento.</p><p>Para ativar a depuração USB no seu dispositivo, primeiro você precisa ativar o menu &quot;Opções do desenvolvedor&quot; acessando <strong>Settings → About phone → Software information</strong> e tocando na linha <code>Build number</code> na parte inferior sete vezes. Você pode então voltar para <strong>Settings → Developer options</strong> para ativar a &quot;<strong>depuração USB</strong>&quot;.</p><h2 id="_2-conecte-seu-dispositivo-via-usb" tabindex="-1">2. Conecte seu dispositivo via USB <a class="header-anchor" href="#_2-conecte-seu-dispositivo-via-usb" aria-label="Permalink to &quot;2. Conecte seu dispositivo via USB&quot;">​</a></h2><p>Vamos agora configurar um dispositivo Android para executar nossos projetos React Native. Vá em frente e conecte seu dispositivo via USB à sua máquina de desenvolvimento.</p><p>Agora verifique se o seu dispositivo está conectado corretamente ao ADB, o Android Debug Bridge, executando <code>adb devices</code>.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> adb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> devices</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">List</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> of</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> devices</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> attached</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">emulator-5554</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> offline</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # Google emulator</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">14ed2fcc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> device</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         # Physical device</span></span></code></pre></div><p>Ver o dispositivo na coluna da direita significa que o dispositivo está conectado. Você deve ter <strong>apenas um dispositivo conectado por vez</strong>.</p><h2 id="_3-execute-seu-aplicativo" tabindex="-1">3. Execute seu aplicativo <a class="header-anchor" href="#_3-execute-seu-aplicativo" aria-label="Permalink to &quot;3. Execute seu aplicativo&quot;">​</a></h2><p>Na raiz do seu projeto, execute o seguinte no prompt de comando para instalar e iniciar seu aplicativo no dispositivo:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-wwupH" id="tab-pEkCQuV" checked="checked"><label for="tab-pEkCQuV">npm</label><input type="radio" name="group-wwupH" id="tab-qn1S9p0"><label for="tab-qn1S9p0">yarn</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> android</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> android</span></span></code></pre></div></div></div><div class="tip custom-block"><p class="custom-block-title">DICA</p><p>Você também pode usar o <code>React Native CLI</code> para gerar e executar uma <code>release</code> build (por exemplo, da raiz do seu projeto: <code>yarn android --mode release</code>).</p></div><h2 id="conectando-se-ao-servidor-de-desenvolvimento" tabindex="-1">Conectando-se ao servidor de desenvolvimento <a class="header-anchor" href="#conectando-se-ao-servidor-de-desenvolvimento" aria-label="Permalink to &quot;Conectando-se ao servidor de desenvolvimento&quot;">​</a></h2><p>Você também pode iterar rapidamente em um dispositivo conectando-se ao servidor de desenvolvimento em execução na sua máquina de desenvolvimento. Existem várias maneiras de fazer isso, dependendo se você tem acesso a um cabo USB ou a uma rede Wi-Fi.</p><h3 id="metodo-1-usando-adb-reverse-recomendado" tabindex="-1">Método 1: usando adb reverse (recomendado) <a class="header-anchor" href="#metodo-1-usando-adb-reverse-recomendado" aria-label="Permalink to &quot;Método 1: usando adb reverse (recomendado)&quot;">​</a></h3><p>Você pode usar este método se o seu dispositivo estiver executando o Android 5.0 (Lollipop) ou mais recente, tiver a depuração USB ativada e estiver conectado via USB à sua máquina de desenvolvimento.</p><p>Execute o seguinte em um prompt de comando:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">adb</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">device</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reverse</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tcp:8081</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tcp:8081</span></span></code></pre></div><p>Para encontrar o nome do dispositivo, execute o seguinte comando adb:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">adb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> devices</span></span></code></pre></div><p>Agora você pode ativar o recarregamento ao vivo no <a href="/docs/debugging.html">Dev Menu</a>. Seu aplicativo será recarregado sempre que seu código JavaScript for alterado.</p><h3 id="metodo-2-conectar-via-wi-fi" tabindex="-1">Método 2: conectar via Wi-Fi <a class="header-anchor" href="#metodo-2-conectar-via-wi-fi" aria-label="Permalink to &quot;Método 2: conectar via Wi-Fi&quot;">​</a></h3><p>Você também pode se conectar ao servidor de desenvolvimento por Wi-Fi. Primeiro, você precisará instalar o aplicativo em seu dispositivo usando um cabo USB, mas depois de fazer isso, você poderá depurar sem fio seguindo estas instruções. Você precisará do endereço IP atual da sua máquina de desenvolvimento antes de continuar.</p><p>Abra o prompt de comando e digite <code>ipconfig</code> para encontrar o endereço IP da sua máquina (<a href="https://windows.microsoft.com/en-us/windows/using-command-line-tools-networking-information" target="_blank" rel="noreferrer">mais informações</a>).</p><ol><li>Certifique-se de que seu laptop e telefone estejam na mesma rede Wi-Fi.</li><li>Abra seu aplicativo React Native em seu dispositivo.</li><li>Você verá uma <a href="/docs/debugging.html">tela vermelha com um erro</a>. Tudo bem. As etapas a seguir corrigirão isso.</li><li>Abra o menu de <a href="/docs/debugging.html">Dev Menu</a>.</li><li>Vá para <strong>Dev Settings → Debug server host &amp; port for device</strong>.</li><li>Digite o endereço IP da sua máquina e a porta do servidor de desenvolvimento local (por exemplo, <code>10.0.1.1:8081</code>).</li><li>Volte ao <strong>Dev Menu</strong> e selecione <strong>Reload JS</strong>.</li></ol><p>Agora você pode ativar o recarregamento ao vivo no <a href="/docs/debugging.html">Dev Menu</a>. Seu aplicativo será recarregado sempre que seu código JavaScript for alterado.</p><h3 id="construindo-seu-aplicativo-para-producao" tabindex="-1">Construindo seu aplicativo para produção <a class="header-anchor" href="#construindo-seu-aplicativo-para-producao" aria-label="Permalink to &quot;Construindo seu aplicativo para produção&quot;">​</a></h3><p>Você construiu um ótimo aplicativo usando React Native e agora está ansioso para lançá-lo na Play Store. O processo é igual ao de qualquer outro aplicativo Android nativo, com algumas considerações adicionais a serem levadas em consideração. Siga o guia para <a href="/docs/signed-apk-android.html">gerar um APK assinado</a> para saber mais.</p>`,29),n=[t];function d(r,p,l,c,u,h){return i(),e("div",null,n)}const g=a(o,[["render",d]]);export{m as __pageData,g as default};
