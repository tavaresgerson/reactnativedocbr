import{_ as a,c as i,o as t,a4 as e}from"./chunks/framework.nQaBHiNx.js";const v=JSON.parse('{"title":"Integração com aplicativos existentes","description":"","frontmatter":{},"headers":[],"relativePath":"docs/integration-with-existing-apps.md","filePath":"docs/integration-with-existing-apps.md"}'),o={name:"docs/integration-with-existing-apps.md"},s=e('<h1 id="integracao-com-aplicativos-existentes" tabindex="-1">Integração com aplicativos existentes <a class="header-anchor" href="#integracao-com-aplicativos-existentes" aria-label="Permalink to &quot;Integração com aplicativos existentes&quot;">​</a></h1><p>React Native é ótimo quando você inicia um novo aplicativo móvel do zero. No entanto, também funciona bem para adicionar uma visualização única ou fluxo de usuário a aplicativos nativos existentes. Com algumas etapas, você pode adicionar novos recursos, telas, visualizações, etc. baseados no React Native.</p><p>As etapas específicas são diferentes dependendo da plataforma que você está almejando.</p><ul><li><a href="/docs/integration-with-existing-apps/android-kotlin.html">Android (Kotlin)</a></li><li><a href="/docs/integration-with-existing-apps/android-java.html">Android (Java)</a></li><li><a href="/docs/integration-with-existing-apps/ios-objective-c.html">iOS (Objective-C)</a></li><li><a href="/docs/integration-with-existing-apps/ios-swift.html">iOS (Swift)</a></li></ul>',4),n=[s];function c(r,p,d,l,m,h){return t(),i("div",null,n)}const g=a(o,[["render",c]]);export{v as __pageData,g as default};
