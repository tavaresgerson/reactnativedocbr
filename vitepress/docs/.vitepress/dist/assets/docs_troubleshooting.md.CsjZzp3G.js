import{_ as a,c as e,o as s,a4 as o}from"./chunks/framework.nQaBHiNx.js";const m=JSON.parse('{"title":"Solução de problemas","description":"","frontmatter":{},"headers":[],"relativePath":"docs/troubleshooting.md","filePath":"docs/troubleshooting.md"}'),i={name:"docs/troubleshooting.md"},t=o(`<h1 id="solucao-de-problemas" tabindex="-1">Solução de problemas <a class="header-anchor" href="#solucao-de-problemas" aria-label="Permalink to &quot;Solução de problemas&quot;">​</a></h1><p>Estes são alguns problemas comuns que você pode encontrar ao configurar o React Native. Se você encontrar algo que não esteja listado aqui, tente pesquisar o <a href="https://github.com/facebook/react-native/issues/" target="_blank" rel="noreferrer">problema no GitHub</a>.</p><h2 id="porta-ja-em-uso-port-already-in-use" tabindex="-1">Porta já em uso (Port already in use) <a class="header-anchor" href="#porta-ja-em-uso-port-already-in-use" aria-label="Permalink to &quot;Porta já em uso (Port already in use)&quot;">​</a></h2><p>O empacotador Metro é executado na porta 8081. Se outro processo já estiver usando essa porta, você poderá encerrar esse processo ou alterar a porta que o empacotador usa.</p><h3 id="encerrando-um-processo-na-porta-8081" tabindex="-1">Encerrando um processo na porta 8081 <a class="header-anchor" href="#encerrando-um-processo-na-porta-8081" aria-label="Permalink to &quot;Encerrando um processo na porta 8081&quot;">​</a></h3><p>Execute o seguinte comando para encontrar o ID do processo que está escutando na porta 8081:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lsof</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> :8081</span></span></code></pre></div><p>Em seguida, execute o seguinte para encerrar o processo:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">kill</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -9</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">PI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">D</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>No Windows você pode encontrar o processo usando a porta 8081 usando o Monitor de Recursos e interrompê-lo usando o Gerenciador de Tarefas.</p><h3 id="usando-uma-porta-diferente-de-8081" tabindex="-1">Usando uma porta diferente de 8081 <a class="header-anchor" href="#usando-uma-porta-diferente-de-8081" aria-label="Permalink to &quot;Usando uma porta diferente de 8081&quot;">​</a></h3><p>Você pode configurar o bundler para usar uma porta diferente de 8081 usando o parâmetro port, na raiz da execução do seu projeto:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-K8bWJ" id="tab-2-5Cl83" checked="checked"><label for="tab-2-5Cl83">npm</label><input type="radio" name="group-K8bWJ" id="tab-NlGNFn6"><label for="tab-NlGNFn6">yarn</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --port=8088</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --port</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8088</span></span></code></pre></div></div></div><p>Você também precisará atualizar seus aplicativos para carregar o pacote JavaScript da nova porta. Se estiver executando no dispositivo do Xcode, você pode fazer isso atualizando as ocorrências de 8081 para a porta escolhida no arquivo <code>ios/__App_Name__.xcodeproj/project.pbxproj</code>.</p><h2 id="erro-de-bloqueio-npm" tabindex="-1">Erro de bloqueio NPM <a class="header-anchor" href="#erro-de-bloqueio-npm" aria-label="Permalink to &quot;Erro de bloqueio NPM&quot;">​</a></h2><p>Se você encontrar um erro como <code>npm WARN locking Error: EACCES</code> ao usar o React Native CLI, tente executar o seguinte:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chown</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -R</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $USER </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">~/.npm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chown</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -R</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $USER </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/usr/local/lib/node_modules</span></span></code></pre></div><h2 id="bibliotecas-ausentes-para-react" tabindex="-1">Bibliotecas ausentes para React <a class="header-anchor" href="#bibliotecas-ausentes-para-react" aria-label="Permalink to &quot;Bibliotecas ausentes para React&quot;">​</a></h2><p>Se você adicionou React Native manualmente ao seu projeto, certifique-se de ter incluído todas as dependências relevantes que está usando, como <code>RCTText.xcodeproj</code>, <code>RCTImage.xcodeproj</code>. Em seguida, os binários criados por essas dependências devem ser vinculados ao binário do seu aplicativo. Use a seção <code>Linked Frameworks and Binaries</code> nas configurações do projeto Xcode. Etapas mais detalhadas estão aqui: <a href="/docs/linking-libraries-ios.html">Vinculando Bibliotecas</a>.</p><p>Se você estiver usando CocoaPods, verifique se adicionou React junto com as subespecificações ao <code>Podfile</code>. Por exemplo, se você estivesse usando as APIs <code>&lt;Text /&gt;</code>, <code>&lt;Image /&gt;</code> e <code>fetch()</code>, você precisaria adicioná-las em seu <code>Podfile</code>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>pod &#39;React&#39;, :path =&gt; &#39;../node_modules/react-native&#39;, :subspecs =&gt; [</span></span>
<span class="line"><span>  &#39;RCTText&#39;,</span></span>
<span class="line"><span>  &#39;RCTImage&#39;,</span></span>
<span class="line"><span>  &#39;RCTNetwork&#39;,</span></span>
<span class="line"><span>  &#39;RCTWebSocket&#39;,</span></span>
<span class="line"><span>]</span></span></code></pre></div><p>Em seguida, certifique-se de ter executado <code>pod install</code> e de que um diretório <code>Pods/</code> tenha sido criado em seu projeto com o React instalado. CocoaPods irá instruí-lo a usar o arquivo <code>.xcworkspace</code> gerado daqui em diante para poder usar essas dependências instaladas.</p><h3 id="react-native-nao-compila-ao-ser-usado-como-cocoapod" tabindex="-1">React Native não compila ao ser usado como CocoaPod <a class="header-anchor" href="#react-native-nao-compila-ao-ser-usado-como-cocoapod" aria-label="Permalink to &quot;React Native não compila ao ser usado como CocoaPod&quot;">​</a></h3><p>Existe um plugin CocoaPods chamado <code>cocoapods-fix-react-native</code> que lida com qualquer possível pós-correção do código-fonte devido a diferenças ao usar um gerenciador de dependências.</p><h3 id="lista-de-argumentos-muito-longa-falha-na-expansao-do-cabecalho-recursivo" tabindex="-1">Lista de argumentos muito longa: falha na expansão do cabeçalho recursivo <a class="header-anchor" href="#lista-de-argumentos-muito-longa-falha-na-expansao-do-cabecalho-recursivo" aria-label="Permalink to &quot;Lista de argumentos muito longa: falha na expansão do cabeçalho recursivo&quot;">​</a></h3><p>Nas configurações de construção do projeto, <code>User Search Header Paths</code> e <code>Header Search Paths</code> são duas configurações que especificam onde o Xcode deve procurar os arquivos de cabeçalho <code>#import</code> especificados no código. Para pods, CocoaPods usa uma matriz padrão de pastas específicas para procurar. Verifique se essa configuração específica não foi substituída e se nenhuma das pastas configuradas é muito grande. Se uma das pastas for grande, o Xcode tentará pesquisar recursivamente o diretório inteiro e gerará o erro acima em algum momento.</p><p>Para reverter as configurações de compilação dos User Search Header Paths<code>e</code>Header Search Paths\` para seus padrões definidos pelo CocoaPods - selecione a entrada no painel <em>Build Settings</em> e clique em excluir. Isso removerá a substituição personalizada e retornará aos padrões do CocoaPod.</p><h2 id="nao-ha-transportes-disponiveis" tabindex="-1">Não há transportes disponíveis <a class="header-anchor" href="#nao-ha-transportes-disponiveis" aria-label="Permalink to &quot;Não há transportes disponíveis&quot;">​</a></h2><p>React Native implementa um polyfill para WebSockets. Esses <a href="https://github.com/facebook/react-native/blob/main/packages/react-native/Libraries/Core/InitializeCore.js" target="_blank" rel="noreferrer">polyfills</a> são inicializados como parte do módulo react-native que você inclui em seu aplicativo por meio do <code>import React from &#39;react&#39;</code>. Se você carregar outro módulo que requer WebSockets, como Firebase, certifique-se de carregá-lo/solicitá-lo após o React Native:</p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> React </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;react&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Firebase </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;firebase&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="excecao-sem-resposta-do-comando-shell" tabindex="-1">Exceção sem resposta do comando Shell <a class="header-anchor" href="#excecao-sem-resposta-do-comando-shell" aria-label="Permalink to &quot;Exceção sem resposta do comando Shell&quot;">​</a></h2><p>Se você encontrar uma exceção <code>ShellCommandUnresponsiveException</code> como:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Execution failed for task &#39;:app:installDebug&#39;.</span></span>
<span class="line"><span>  com.android.builder.testing.api.DeviceException: com.android.ddmlib.ShellCommandUnresponsiveException</span></span></code></pre></div><p>Tente fazer o downgrade da sua versão do <a href="https://github.com/facebook/react-native/issues/2720" target="_blank" rel="noreferrer">Gradle para 1.2.3</a> em <code>android/build.gradle</code>.</p><h2 id="inicializacao-travada-do-react-native" tabindex="-1">inicialização travada do react-native <a class="header-anchor" href="#inicializacao-travada-do-react-native" aria-label="Permalink to &quot;inicialização travada do react-native&quot;">​</a></h2><p>Se você tiver problemas em que a execução do <code>npx react-native init</code> trava em seu sistema, tente executá-lo novamente no modo detalhado e consulte <a href="https://github.com/facebook/react-native/issues/2797" target="_blank" rel="noreferrer">#2797</a> para causas comuns:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> react-native</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --verbose</span></span></code></pre></div><p>Quando você está depurando um processo ou precisa saber um pouco mais sobre o erro que está sendo gerado, você pode querer usar a opção detalhada para gerar mais logs e informações para resolver seu problema.</p><p>Execute o seguinte comando no diretório raiz do seu projeto.</p><h5 id="npm" tabindex="-1">npm <a class="header-anchor" href="#npm" aria-label="Permalink to &quot;npm&quot;">​</a></h5><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> android</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --verbose</span></span></code></pre></div><h5 id="yarn" tabindex="-1">yarn <a class="header-anchor" href="#yarn" aria-label="Permalink to &quot;yarn&quot;">​</a></h5><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> android</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --verbose</span></span></code></pre></div><h2 id="nao-e-possivel-iniciar-o-gerenciador-de-pacotes-react-native-no-linux" tabindex="-1">Não é possível iniciar o gerenciador de pacotes react-native (no Linux) <a class="header-anchor" href="#nao-e-possivel-iniciar-o-gerenciador-de-pacotes-react-native-no-linux" aria-label="Permalink to &quot;Não é possível iniciar o gerenciador de pacotes react-native (no Linux)&quot;">​</a></h2><h3 id="caso-1-erro-codigo-enospc-errno-enospc" tabindex="-1">Caso 1: Erro &quot;código&quot;:&quot;ENOSPC&quot;,&quot;errno&quot;:&quot;ENOSPC&quot; <a class="header-anchor" href="#caso-1-erro-codigo-enospc-errno-enospc" aria-label="Permalink to &quot;Caso 1: Erro &quot;código&quot;:&quot;ENOSPC&quot;,&quot;errno&quot;:&quot;ENOSPC&quot;&quot;">​</a></h3><p>Problema causado pelo número de diretórios que o <a href="https://github.com/guard/listen/wiki/Increasing-the-amount-of-inotify-watchers" target="_blank" rel="noreferrer"><code>inotify</code></a> (usado pelo watchman no Linux) pode monitorar. Para resolver isso, execute este comando na janela do seu terminal:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fs.inotify.max_user_watches=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">582222</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tee</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/sysctl.conf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sysctl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span></span></code></pre></div><h3 id="error-spawnsync-gradlew-eacces" tabindex="-1">Error: spawnSync ./gradlew EACCES <a class="header-anchor" href="#error-spawnsync-gradlew-eacces" aria-label="Permalink to &quot;Error: spawnSync ./gradlew EACCES&quot;">​</a></h3><p>Se você tiver um problema em que a execução do <code>npm run android</code> ou <code>yarn android</code> no macOS gera o erro acima, tente executar o comando <code>sudo chmod +x android/gradlew</code> para tornar os arquivos gradlew em executáveis.</p>`,49),r=[t];function n(d,p,c,l,h,u){return s(),e("div",null,r)}const g=a(i,[["render",n]]);export{m as __pageData,g as default};
