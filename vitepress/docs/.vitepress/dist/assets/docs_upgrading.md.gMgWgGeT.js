import{_ as a,c as e,o as s,a4 as o}from"./chunks/framework.nQaBHiNx.js";const v=JSON.parse('{"title":"Atualizando para novas versões","description":"","frontmatter":{},"headers":[],"relativePath":"docs/upgrading.md","filePath":"docs/upgrading.md"}'),i={name:"docs/upgrading.md"},t=o(`<h1 id="atualizando-para-novas-versoes" tabindex="-1">Atualizando para novas versões <a class="header-anchor" href="#atualizando-para-novas-versoes" aria-label="Permalink to &quot;Atualizando para novas versões&quot;">​</a></h1><p>A atualização para novas versões do React Native lhe dará acesso a mais APIs, visualizações, ferramentas de desenvolvedor e outras vantagens. A atualização requer um pouco de esforço, mas tentamos torná-la simples para você.</p><h2 id="projetos-de-expo" tabindex="-1">Projetos de expo <a class="header-anchor" href="#projetos-de-expo" aria-label="Permalink to &quot;Projetos de expo&quot;">​</a></h2><p>Atualizar seu projeto Expo para uma nova versão do React Native requer a atualização das versões dos pacotes <code>react-native</code>, <code>react</code> e <code>expo</code> em seu arquivo <code>package.json</code>. Expo fornece um comando de atualização para lidar com a atualização dessas e de quaisquer outras dependências conhecidas para você. Consulte o <a href="https://docs.expo.dev/workflow/upgrading-expo-sdk-walkthrough/" target="_blank" rel="noreferrer">passo a passo de atualização do Expo SDK</a> para obter informações atualizadas sobre como atualizar seu projeto.</p><h2 id="projetos-react-native" tabindex="-1">Projetos React Native <a class="header-anchor" href="#projetos-react-native" aria-label="Permalink to &quot;Projetos React Native&quot;">​</a></h2><p>Como os projetos típicos do React Native são essencialmente compostos de um projeto Android, um projeto iOS e um projeto JavaScript, a atualização pode ser bastante complicada. Atualmente, existem duas maneiras de atualizar seu projeto React Native: usando <a href="https://github.com/react-native-community/cli" target="_blank" rel="noreferrer">React Native CLI</a> ou manualmente com <a href="https://react-native-community.github.io/upgrade-helper/" target="_blank" rel="noreferrer">Upgrade Helper</a>.</p><h2 id="cli-react-native" tabindex="-1">CLI React Native <a class="header-anchor" href="#cli-react-native" aria-label="Permalink to &quot;CLI React Native&quot;">​</a></h2><p>O <a href="https://github.com/react-native-community/cli" target="_blank" rel="noreferrer">React Native CLI</a> vem com o comando upgrade que fornece uma operação de uma etapa para atualizar os arquivos de origem com um mínimo de conflitos. Ele usa internamente o projeto <a href="https://github.com/react-native-community/rn-diff-purge" target="_blank" rel="noreferrer">rn-diff-purge</a> para descobrir quais arquivos precisam ser criados, removidos ou modificados.</p><h3 id="_1-execute-o-comando-upgrade" tabindex="-1">1. Execute o comando <code>upgrade</code> <a class="header-anchor" href="#_1-execute-o-comando-upgrade" aria-label="Permalink to &quot;1. Execute o comando \`upgrade\`&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">DICA</p><p>O comando <code>upgrade</code> funciona em cima do Git usando <code>git apply</code> com mesclagem de 3 vias, portanto é necessário usar o Git para que isso funcione, se você não usa o Git, mas ainda deseja usar esta solução, você pode verificar como fazer isso na seção Solução de problemas nesta página.</p></div><p>Execute o seguinte comando para iniciar o processo de atualização para a versão mais recente:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> react-native</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upgrade</span></span></code></pre></div><p>Você pode especificar uma versão do React Native passando um argumento, por exemplo. para atualizar para <code>0.61.0-rc.0</code> execute:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> react-native</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upgrade</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.61</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.0-rc.0</span></span></code></pre></div><p>O projeto é atualizado usando <code>git apply</code> com mesclagem de 3 vias, pode acontecer que você precise resolver alguns conflitos após terminar.</p><h3 id="_2-resolva-os-conflitos" tabindex="-1">2. Resolva os conflitos <a class="header-anchor" href="#_2-resolva-os-conflitos" aria-label="Permalink to &quot;2. Resolva os conflitos&quot;">​</a></h3><p>Os arquivos em conflito incluem delimitadores que deixam bem claro de onde vêm as alterações. Por exemplo:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>13B07F951A680F5B00A75B9A /* Release */ = {</span></span>
<span class="line"><span>  isa = XCBuildConfiguration;</span></span>
<span class="line"><span>  buildSettings = {</span></span>
<span class="line"><span>    ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;</span></span>
<span class="line"><span>&lt;&lt;&lt;&lt;&lt;&lt;&lt; ours</span></span>
<span class="line"><span>    CODE_SIGN_IDENTITY = &quot;iPhone Developer&quot;;</span></span>
<span class="line"><span>    FRAMEWORK_SEARCH_PATHS = (</span></span>
<span class="line"><span>      &quot;$(inherited)&quot;,</span></span>
<span class="line"><span>      &quot;$(PROJECT_DIR)/HockeySDK.embeddedframework&quot;,</span></span>
<span class="line"><span>      &quot;$(PROJECT_DIR)/HockeySDK-iOS/HockeySDK.embeddedframework&quot;,</span></span>
<span class="line"><span>    );</span></span>
<span class="line"><span>=======</span></span>
<span class="line"><span>    CURRENT_PROJECT_VERSION = 1;</span></span>
<span class="line"><span>&gt;&gt;&gt;&gt;&gt;&gt;&gt; theirs</span></span>
<span class="line"><span>    HEADER_SEARCH_PATHS = (</span></span>
<span class="line"><span>      &quot;$(inherited)&quot;,</span></span>
<span class="line"><span>      /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include,</span></span>
<span class="line"><span>      &quot;$(SRCROOT)/../node_modules/react-native/React/**&quot;,</span></span>
<span class="line"><span>      &quot;$(SRCROOT)/../node_modules/react-native-code-push/ios/CodePush/**&quot;,</span></span>
<span class="line"><span>    );</span></span></code></pre></div><p>Você pode pensar em &quot;ours&quot; como &quot;sua equipe&quot; e &quot;theirs&quot; como &quot;a equipe de desenvolvimento do React Native&quot;.</p><h2 id="ajudante-de-atualizacao" tabindex="-1">Ajudante de atualização <a class="header-anchor" href="#ajudante-de-atualizacao" aria-label="Permalink to &quot;Ajudante de atualização&quot;">​</a></h2><p>O <a href="https://react-native-community.github.io/upgrade-helper/" target="_blank" rel="noreferrer">Upgrade Helper</a> é uma ferramenta da web para ajudá-lo na atualização de seus aplicativos, fornecendo o conjunto completo de alterações que ocorrem entre duas versões. Ele também mostra comentários sobre arquivos específicos para ajudar a entender por que essa alteração é necessária.</p><h3 id="_1-selecione-as-versoes" tabindex="-1">1. Selecione as versões <a class="header-anchor" href="#_1-selecione-as-versoes" aria-label="Permalink to &quot;1. Selecione as versões&quot;">​</a></h3><p>Primeiro você precisa selecionar para qual versão deseja atualizar; por padrão, as versões principais mais recentes são selecionadas. Após selecionar você pode clicar no botão &quot;Mostre-me como atualizar&quot;.</p><div class="tip custom-block"><p class="custom-block-title">DICA</p><p>as principais atualizações mostrarão uma seção de &quot;<em>useful content</em>&quot; (conteúdo útil) na parte superior com links para ajudá-lo durante a atualização.</p></div><h3 id="_2-atualizar-dependencias" tabindex="-1">2. Atualizar dependências <a class="header-anchor" href="#_2-atualizar-dependencias" aria-label="Permalink to &quot;2. Atualizar dependências&quot;">​</a></h3><p>O primeiro arquivo que aparece é o <code>package.json</code>, é bom atualizar as dependências que estão aparecendo nele. Por exemplo, se <code>react-native</code> e <code>react</code> aparecerem como alterações, você poderá instalá-lo em seu projeto executando <code>yarn add</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># {{VERSION}} e {{REACT_VERSION}} são as versões de lançamento mostradas na comparação</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> react-native@{{VERSION}}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> react@{{REACT_VERSION}}</span></span></code></pre></div><h3 id="_3-atualize-seus-arquivos-de-projeto" tabindex="-1">3. Atualize seus arquivos de projeto <a class="header-anchor" href="#_3-atualize-seus-arquivos-de-projeto" aria-label="Permalink to &quot;3. Atualize seus arquivos de projeto&quot;">​</a></h3><p>A nova versão pode conter atualizações para outros arquivos que são gerados quando você executa o <code>npx react-native init</code>. Esses arquivos são listados após <code>package.json</code> na página do Upgrade Helper. Se não houver outras alterações, você só precisará reconstruir o projeto para continuar o desenvolvimento.</p><p>Caso haja alterações, você pode atualizá-las manualmente, copiando e colando as alterações na página ou pode fazer isso com o comando de atualização React Native CLI executando:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> react-native</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upgrade</span></span></code></pre></div><p>Isso verificará seus arquivos em relação ao modelo mais recente e executará o seguinte:</p><ul><li>Se houver um novo arquivo no modelo, ele será criado.</li><li>Se um arquivo no modelo for idêntico ao seu arquivo, ele será ignorado.</li><li>Se um arquivo em seu projeto for diferente do modelo, você será avisado; você tem opções para manter seu arquivo ou substituí-lo pela versão do modelo.</li></ul><div class="info custom-block"><p class="custom-block-title">INFORMAÇÕES</p><p>Algumas atualizações não serão feitas automaticamente com o React Native CLI e requerem trabalho manual, por exemplo. <code>0.28</code> a <code>0.29</code> ou <code>0.56</code> a <code>0.57</code>. Certifique-se de verificar as notas de versão ao atualizar para poder identificar quaisquer alterações manuais que seu projeto específico possa exigir.</p></div><h2 id="solucao-de-problemas" tabindex="-1">Solução de problemas <a class="header-anchor" href="#solucao-de-problemas" aria-label="Permalink to &quot;Solução de problemas&quot;">​</a></h2><h3 id="quero-atualizar-com-react-native-cli-mas-nao-uso-git" tabindex="-1">Quero atualizar com React Native CLI, mas não uso Git <a class="header-anchor" href="#quero-atualizar-com-react-native-cli-mas-nao-uso-git" aria-label="Permalink to &quot;Quero atualizar com React Native CLI, mas não uso Git&quot;">​</a></h3><p>Embora seu projeto não precise ser gerenciado pelo sistema de versionamento Git - você pode usar Mercurial, SVN ou nada - você ainda precisará instalar o <a href="https://git-scm.com/downloads" target="_blank" rel="noreferrer">Git</a> em seu sistema para usar o <code>npx react-native upgrade</code>. O Git também precisará estar disponível no <code>PATH</code>. Se o seu projeto não usa Git, inicialize-o e faça o commit:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Inicialize um repositório Git</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Prepare todos os arquivos atuais</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Upgrade react-native&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Salva os arquivos atuais em um commit</span></span></code></pre></div><p>Depois de terminar a atualização, você pode remover o diretório <code>.git</code>.</p><h3 id="fiz-todas-as-alteracoes-mas-meu-aplicativo-ainda-usa-uma-versao-antiga" tabindex="-1">Fiz todas as alterações, mas meu aplicativo ainda usa uma versão antiga <a class="header-anchor" href="#fiz-todas-as-alteracoes-mas-meu-aplicativo-ainda-usa-uma-versao-antiga" aria-label="Permalink to &quot;Fiz todas as alterações, mas meu aplicativo ainda usa uma versão antiga&quot;">​</a></h3><p>Esses tipos de erros geralmente estão relacionados ao cache, é recomendado instalar o <a href="https://github.com/pmadruga/react-native-clean-project" target="_blank" rel="noreferrer"><code>react-native-clean-project</code></a> para limpar todo o cache do seu projeto e então você pode executá-lo novamente.</p>`,41),n=[t];function r(p,l,c,d,u,h){return s(),e("div",null,n)}const g=a(i,[["render",r]]);export{v as __pageData,g as default};
