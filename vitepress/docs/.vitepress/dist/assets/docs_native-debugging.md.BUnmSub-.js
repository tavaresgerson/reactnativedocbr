import{_ as o,c as a,o as e,a4 as t}from"./chunks/framework.nQaBHiNx.js";const g=JSON.parse('{"title":"Debug Nativo","description":"","frontmatter":{},"headers":[],"relativePath":"docs/native-debugging.md","filePath":"docs/native-debugging.md"}'),i={name:"docs/native-debugging.md"},s=t('<h1 id="debug-nativo" tabindex="-1">Debug Nativo <a class="header-anchor" href="#debug-nativo" aria-label="Permalink to &quot;Debug Nativo&quot;">​</a></h1><div class="info custom-block"><p class="custom-block-title"><strong>Projetos com somente código nativo</strong></p><p>A seção a seguir se aplica apenas a projetos com código nativo exposto. Se você estiver usando o fluxo de trabalho gerenciado da Expo, consulte o guia sobre <a href="https://docs.expo.dev/workflow/prebuild/" target="_blank" rel="noreferrer">pré-construção</a> para usar esta API.</p></div><h2 id="acessando-logs-nativos" tabindex="-1">Acessando logs nativos <a class="header-anchor" href="#acessando-logs-nativos" aria-label="Permalink to &quot;Acessando logs nativos&quot;">​</a></h2><p>Você pode exibir os logs do console de um aplicativo iOS ou Android usando os seguintes comandos em um terminal enquanto o aplicativo está em execução:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-FZotZ" id="tab-opS5Rnh" checked="checked"><label for="tab-opS5Rnh">Para Android</label><input type="radio" name="group-FZotZ" id="tab-n_EnLFP"><label for="tab-n_EnLFP">para iOS</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> react-native</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> log-android</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> react-native</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> log-ios</span></span></code></pre></div></div></div><p>Você também pode acessá-los por meio de <strong>Debug &gt; Open System Log…</strong> no iOS Simulator ou executando <code>adb logcat &quot;*:S&quot; ReactNative:V ReactNativeJS:V</code> em um terminal enquanto um aplicativo Android está sendo executado em um dispositivo ou emulador.</p><div class="info custom-block"><p class="custom-block-title"><strong>INFORMAÇÕES</strong></p><p>Se você estiver usando o Expo CLI, os logs do console já aparecerão na mesma saída do terminal que o empacotador.</p></div><h2 id="depurando-codigo-nativo" tabindex="-1">Depurando código nativo <a class="header-anchor" href="#depurando-codigo-nativo" aria-label="Permalink to &quot;Depurando código nativo&quot;">​</a></h2><p>Ao trabalhar com código nativo, como ao escrever módulos nativos, você pode iniciar o aplicativo no Android Studio ou Xcode e aproveitar as vantagens dos recursos de depuração nativos (configuração de pontos de interrupção etc.), como faria no caso de criar um aplicativo nativo padrão. .</p><p>Outra opção é executar seu aplicativo usando a CLI React Native e anexar o depurador nativo do IDE nativo (Android Studio ou Xcode) ao processo.</p><h3 id="android-studio" tabindex="-1">Android Studio <a class="header-anchor" href="#android-studio" aria-label="Permalink to &quot;Android Studio&quot;">​</a></h3><p>No Android Studio você pode fazer isso acessando a opção &quot;Run&quot; na barra de menu, clicando em &quot;Attach to Process...&quot; e selecionando o aplicativo React Native em execução.</p><h3 id="xcode" tabindex="-1">Xcode <a class="header-anchor" href="#xcode" aria-label="Permalink to &quot;Xcode&quot;">​</a></h3><p>No Xcode clique em &quot;Debug&quot; na barra de menu superior, selecione a opção &quot;Attach to process&quot; e selecione o aplicativo na lista de &quot;Likely Targets&quot;.</p>',14),n=[s];function d(c,r,l,p,u,h){return e(),a("div",null,n)}const m=o(i,[["render",d]]);export{g as __pageData,m as default};
