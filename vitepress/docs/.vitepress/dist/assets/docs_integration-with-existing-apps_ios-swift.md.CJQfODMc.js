import{_ as s,c as a,o as i,a4 as e}from"./chunks/framework.nQaBHiNx.js";const n="/assets/290205035-be5d7e97-b86c-4a0f-94d3-673886cc49a3.wE_Ms7Jv.png",t="/assets/289078069-79daecf4-41df-45e4-bdfd-34120ecb2d9b.DqQEPRQ3.png",o="/assets/290218954-e41f72f9-dabc-4735-a4df-ab3260c30f3f.09D_xvWf.png",p="/assets/290225173-8c00a858-3507-4de4-84e0-536c094532f8.GQqlKtKq.png",l="/assets/290225251-23ad63ff-3ee2-4767-a7c0-438cc2c20ece.VCEr0iJR.png",F=JSON.parse('{"title":"iOS (Swift)","description":"","frontmatter":{},"headers":[],"relativePath":"docs/integration-with-existing-apps/ios-swift.md","filePath":"docs/integration-with-existing-apps/ios-swift.md"}'),r={name:"docs/integration-with-existing-apps/ios-swift.md"},h=e(`<h1 id="ios-swift" tabindex="-1">iOS (Swift) <a class="header-anchor" href="#ios-swift" aria-label="Permalink to &quot;iOS (Swift)&quot;">​</a></h1><h2 id="conceitos-chave" tabindex="-1">Conceitos chave <a class="header-anchor" href="#conceitos-chave" aria-label="Permalink to &quot;Conceitos chave&quot;">​</a></h2><p>Os segredos para integrar componentes React Native em seu aplicativo iOS são:</p><ol><li>Configure as dependências e a estrutura de diretórios do React Native.</li><li>Entenda quais componentes do React Native você usará em seu aplicativo.</li><li>Adicione esses componentes como dependências usando CocoaPods.</li><li>Desenvolva seus componentes React Native em JavaScript.</li><li>Adicione um <code>RTRRootView</code> ao seu aplicativo iOS. Esta visualização servirá como contêiner para seu componente React Native.</li><li>Inicie o servidor React Native e execute seu aplicativo nativo.</li><li>Verifique se o aspecto React Native do seu aplicativo funciona conforme o esperado.</li></ol><h2 id="pre-requisitos" tabindex="-1">Pré-requisitos <a class="header-anchor" href="#pre-requisitos" aria-label="Permalink to &quot;Pré-requisitos&quot;">​</a></h2><p>Siga o início rápido do React Native CLI no guia de <a href="/docs/environment-setup.html">configuração do ambiente</a> para configurar seu ambiente de desenvolvimento para construir aplicativos React Native para iOS.</p><h3 id="_1-configure-a-estrutura-de-diretorios" tabindex="-1">1. Configure a estrutura de diretórios <a class="header-anchor" href="#_1-configure-a-estrutura-de-diretorios" aria-label="Permalink to &quot;1. Configure a estrutura de diretórios&quot;">​</a></h3><p>Para garantir uma experiência tranquila, crie uma nova pasta para seu projeto React Native integrado e copie seu projeto iOS existente para uma subpasta <code>/ios</code>.</p><h3 id="_2-instale-dependencias-javascript" tabindex="-1">2. Instale dependências JavaScript <a class="header-anchor" href="#_2-instale-dependencias-javascript" aria-label="Permalink to &quot;2. Instale dependências JavaScript&quot;">​</a></h3><p>Vá para o diretório raiz do seu projeto e crie um novo arquivo <code>package.json</code> com o seguinte conteúdo:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MyReactNativeApp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0.0.1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;private&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;start&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;yarn react-native start&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Em seguida, instale os pacotes <code>react</code> e <code>react-native</code>. Abra um terminal ou prompt de comando, navegue até o diretório com seu arquivo <code>package.json</code> e execute:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-pAVuJ" id="tab-HAjA7T_" checked="checked"><label for="tab-HAjA7T_">npm</label><input type="radio" name="group-pAVuJ" id="tab-W7KEJHp"><label for="tab-W7KEJHp">yarn</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> react-native</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> react-native</span></span></code></pre></div></div></div><p>Isso imprimirá uma mensagem semelhante à seguinte (role para cima na saída do yarn para vê-la):</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>warning &quot;react-native@0.52.2&quot; has unmet peer dependency &quot;react@16.2.0&quot;.</span></span></code></pre></div><p>Tudo bem, significa que também precisamos instalar o React:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-Gq-gb" id="tab-NN-JmVh" checked="checked"><label for="tab-NN-JmVh">npm</label><input type="radio" name="group-Gq-gb" id="tab-knEsPeO"><label for="tab-knEsPeO">yarn</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> react@version_printed_above</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> react@version_printed_above</span></span></code></pre></div></div></div><p>Yarn criou uma nova pasta <code>/node_modules</code>. Esta pasta armazena todas as dependências JavaScript necessárias para construir seu projeto.</p><p>Adicione <code>node_modules/</code> ao seu arquivo <code>.gitignore</code>.</p><h3 id="_3-instale-cocoapods" tabindex="-1">3. Instale CocoaPods <a class="header-anchor" href="#_3-instale-cocoapods" aria-label="Permalink to &quot;3. Instale CocoaPods&quot;">​</a></h3><p><a href="https://cocoapods.org/" target="_blank" rel="noreferrer">CocoaPods</a> é uma ferramenta de gerenciamento de pacotes para desenvolvimento iOS e macOS. Nós o usamos para adicionar o código da estrutura React Native localmente ao seu projeto atual.</p><p>Recomendamos instalar CocoaPods usando <a href="https://brew.sh/" target="_blank" rel="noreferrer">Homebrew</a>.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cocoapods</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Dica</p><p>É tecnicamente possível não usar CocoaPods, mas isso exigiria adições manuais de biblioteca e vinculador que complicariam excessivamente esse processo.</p></div><h2 id="adicionando-react-native-ao-seu-aplicativo" tabindex="-1">Adicionando React Native ao seu aplicativo <a class="header-anchor" href="#adicionando-react-native-ao-seu-aplicativo" aria-label="Permalink to &quot;Adicionando React Native ao seu aplicativo&quot;">​</a></h2><p>Suponha que o <a href="https://github.com/JoelMarcey/swift-2048" target="_blank" rel="noreferrer">aplicativo para integração</a> seja um jogo de <a href="https://en.wikipedia.org/wiki/2048_%28video_game%29" target="_blank" rel="noreferrer">2048</a>. Esta é a aparência do menu principal do aplicativo nativo sem o React Native.</p><p><img src="`+n+'" alt="image"></p><h2 id="ferramentas-de-linha-de-comando-para-xcode" tabindex="-1">Ferramentas de linha de comando para Xcode <a class="header-anchor" href="#ferramentas-de-linha-de-comando-para-xcode" aria-label="Permalink to &quot;Ferramentas de linha de comando para Xcode&quot;">​</a></h2><p>Instale as ferramentas de linha de comando. Escolha <strong>Settings... (or Preferences...)</strong> no menu Xcode. Vá para o painel Locais e instale as ferramentas selecionando a versão mais recente no menu suspenso Ferramentas de linha de comando.</p><p><img src="'+t+`" alt="image"></p><h2 id="configurando-dependencias-do-cocoapods" tabindex="-1">Configurando dependências do CocoaPods <a class="header-anchor" href="#configurando-dependencias-do-cocoapods" aria-label="Permalink to &quot;Configurando dependências do CocoaPods&quot;">​</a></h2><p>Antes de integrar o React Native ao seu aplicativo, você desejará decidir quais partes da estrutura React Native você gostaria de integrar. Usaremos CocoaPods para especificar de quais dessas &quot;subespecificações&quot; seu aplicativo dependerá.</p><p>A lista de subespecificações suportadas está disponível em <code>/node_modules/react-native/React.podspec</code>. Eles geralmente são nomeados por funcionalidade. Por exemplo, geralmente você sempre desejará a subespecificação <code>Core</code>. Isso lhe dará o <code>AppRegistry</code>, <code>StyleSheet</code>, <code>View</code> e outras bibliotecas principais do React Native. Se você deseja adicionar a biblioteca React Native Text (por exemplo, para elementos <code>&lt;Text&gt;</code>), você precisará da subespecificação <code>RCTText</code>. Se você quiser a biblioteca de imagens (por exemplo, para elementos <code>&lt;Image&gt;</code>), precisará da subespecificação <code>RCTImage</code>.</p><p>Você pode especificar de quais subespecificações seu aplicativo dependerá em um arquivo <code>Podfile</code>. A maneira mais fácil de criar um <code>Podfile</code> é executando o comando <code>init</code> CocoaPods na subpasta <code>/ios</code> do seu projeto:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span></code></pre></div><p>O <code>Podfile</code> conterá uma configuração padrão que você ajustará para fins de integração.</p><div class="info custom-block"><p class="custom-block-title">Nota</p><p>A versão do <code>Podfile</code> muda dependendo da sua versão do <code>react-native</code>. Consulte <a href="https://react-native-community.github.io/upgrade-helper/" target="_blank" rel="noreferrer">https://react-native-community.github.io/upgrade-helper/</a> para a versão específica do <code>Podfile</code> que você deve usar.</p></div><p>No final das contas, seu <code>Podfile</code> deve ser semelhante a este: <a href="https://github.com/facebook/react-native/blob/main/packages/react-native/template/ios/Podfile" target="_blank" rel="noreferrer">Template Podfile</a></p><p>Depois de criar seu <code>Podfile</code>, você estará pronto para instalar o pod React Native.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><p>Você deverá ver resultados como:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Analyzing dependencies</span></span>
<span class="line"><span>Fetching podspec for \`React\` from \`../node_modules/react-native\`</span></span>
<span class="line"><span>Downloading dependencies</span></span>
<span class="line"><span>Installing React (0.62.0)</span></span>
<span class="line"><span>Generating Pods project</span></span>
<span class="line"><span>Integrating client project</span></span>
<span class="line"><span>Sending stats</span></span>
<span class="line"><span>Pod installation complete! There are 3 dependencies from the Podfile and 1 total pod installed.</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">Nota</p><p>Se isso falhar com erros mencionando o <code>xcrun</code>, certifique-se de que no Xcode em <strong>Settings... (or Preferences...) &gt; Locations</strong> as Ferramentas de Linha de Comando estejam atribuídas.</p></div><div class="tip custom-block"><p class="custom-block-title">Dica</p><p>Se você receber um aviso como &quot;<em>The swift-2048 [Debug] target overrides the FRAMEWORK_SEARCH_PATHS build setting defined in Pods/Target Support Files/Pods-swift-2048/Pods-swift-2048.debug.xcconfig. This can lead to problems with the CocoaPods installation</em>&quot;, certifique-se de que os caminhos de pesquisa da estrutura nas configurações de compilação para depuração e versão contenham apenas <code>$(inherited)</code>.</p></div><h2 id="integracao-de-codigo" tabindex="-1">Integração de código <a class="header-anchor" href="#integracao-de-codigo" aria-label="Permalink to &quot;Integração de código&quot;">​</a></h2><p>Agora iremos modificar o aplicativo iOS nativo para integrar o React Native. Para nosso aplicativo de amostra 2048, adicionaremos uma tela &quot;High Score&quot; no React Native.</p><h3 id="o-componente-react-native" tabindex="-1">O componente React Native <a class="header-anchor" href="#o-componente-react-native" aria-label="Permalink to &quot;O componente React Native&quot;">​</a></h3><p>O primeiro código que escreveremos é o código React Native real para a nova tela &quot;High Score&quot; que será integrada em nosso aplicativo.</p><h3 id="_1-crie-um-arquivo-index-js" tabindex="-1">1. Crie um arquivo <code>index.js</code> <a class="header-anchor" href="#_1-crie-um-arquivo-index-js" aria-label="Permalink to &quot;1. Crie um arquivo \`index.js\`&quot;">​</a></h3><p>Primeiro, crie um arquivo <code>index.js</code> vazio na raiz do seu projeto React Native.</p><p><code>index.js</code> é o ponto de partida para aplicativos React Native e é sempre necessário. Pode ser um arquivo pequeno que requer outro arquivo que faça parte do seu componente ou aplicativo React Native, ou pode conter todo o código necessário para ele. No nosso caso, colocaremos tudo em <code>index.js</code>.</p><h3 id="_2-adicione-seu-codigo-react-native" tabindex="-1">2. Adicione seu código React Native <a class="header-anchor" href="#_2-adicione-seu-codigo-react-native" aria-label="Permalink to &quot;2. Adicione seu código React Native&quot;">​</a></h3><p>No seu <code>index.js</code>, crie seu componente. Em nosso exemplo aqui, adicionaremos um componente <code>&lt;Text&gt;</code> dentro de um estilo <code>&lt;View&gt;</code></p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> React </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;react&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {AppRegistry, StyleSheet, Text, View} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;react-native&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RNHighScores</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ({</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">scores</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> contents</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> scores.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">score</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Text</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> key</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{score.name}&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {score.name}:{score.value}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ));</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">View</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{styles.container}&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Text</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{styles.highScoresTitle}&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        2048 High Scores!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Text</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{styles.scores}&gt;{contents}&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">View</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> styles</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> StyleSheet.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  container: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    flex: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    justifyContent: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;center&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    alignItems: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;center&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    backgroundColor: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#FFFFFF&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  highScoresTitle: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fontSize: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    textAlign: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;center&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    margin: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  scores: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    textAlign: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;center&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    color: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#333333&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    marginBottom: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Nome do módulo</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AppRegistry.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;RNHighScores&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RNHighScores);</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">Nota</p><p><code>RNHighScores</code> é o nome do seu módulo que será usado quando você adicionar uma visualização ao React Native de dentro do seu aplicativo iOS.</p></div><h2 id="a-magica-rctrootview" tabindex="-1">A mágica: <code>RCTRootView</code> <a class="header-anchor" href="#a-magica-rctrootview" aria-label="Permalink to &quot;A mágica: \`RCTRootView\`&quot;">​</a></h2><p>Agora que seu componente React Native foi criado por meio de <code>index.js</code>, você precisa adicionar esse componente a um <code>ViewController</code> novo ou existente. O caminho mais fácil é criar opcionalmente um caminho de evento para seu componente e, em seguida, adicionar esse componente a um <code>ViewController</code> existente.</p><p>Amarraremos nosso componente React Native a uma nova visualização nativa no <code>ViewController</code> que na verdade o conterá, chamada <code>RCTRootView</code>.</p><h3 id="_1-crie-um-caminho-de-evento" tabindex="-1">1. Crie um caminho de evento <a class="header-anchor" href="#_1-crie-um-caminho-de-evento" aria-label="Permalink to &quot;1. Crie um caminho de evento&quot;">​</a></h3><p>Você pode adicionar um novo link no menu principal do jogo para ir para a página &quot;High Score&quot; do React Native.</p><p><img src="`+o+`" alt="image"></p><h3 id="_2-manipulador-de-eventos" tabindex="-1">2. Manipulador de eventos <a class="header-anchor" href="#_2-manipulador-de-eventos" aria-label="Permalink to &quot;2. Manipulador de eventos&quot;">​</a></h3><p>Agora adicionaremos um manipulador de eventos no link do menu. Um método será adicionado ao ViewController principal da sua aplicação. É aqui que o RTRRootView entra em ação.</p><p>Ao construir um aplicativo React Native, você usa o <a href="https://facebook.github.io/metro/" target="_blank" rel="noreferrer">empacotador Metro</a> para criar um <code>index.bundle</code> que será servido pelo servidor React Native. Dentro de <code>index.bundle</code> estará nosso módulo <code>RNHighScore</code>. Portanto, precisamos apontar nosso <code>RTRRootView</code> para o local do recurso <code>index.bundle</code> (via <code>NSURL</code>) e vinculá-lo ao módulo.</p><p>Iremos, para fins de depuração, registrar que o manipulador de eventos foi invocado. Em seguida, criaremos uma string com a localização do nosso código React Native que existe dentro do <code>index.bundle</code>. Por fim, criaremos o <code>RTRRootView</code> principal. Observe como fornecemos RNHighScores como <code>moduleName</code> que criamos acima ao escrever o código para nosso componente React Native.</p><p>Primeiro <code>import</code> a biblioteca <code>React</code>.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> React</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">Informação</p><p>As <code>initialProperties</code> (propriedades iniciais) estão aqui para fins ilustrativos, por isso temos alguns dados para nossa tela de pontuação mais alta. Em nosso componente React Native, usaremos <code>this.props</code> para obter acesso a esses dados.</p></div><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@IBAction</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> highScoreButtonTapped</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sender</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : UIButton) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  NSLog</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jsCodeLocation </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://localhost:8081/index.bundle?platform=ios&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mockData:NSDictionary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;scores&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Alex&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;value&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;42&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Joel&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;value&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;10&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rootView </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RCTRootView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      bundleURL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: jsCodeLocation,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      moduleName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;RNHighScores&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      initialProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: mockData </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NSObject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AnyObject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      launchOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nil</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  )</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> vc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UIViewController</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  vc.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">view</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rootView</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">present</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vc, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">animated</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">completion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">Nota</p><p>Observe que o <code>RTRRootView bundleURL</code> inicia uma nova VM JSC. Para economizar recursos e simplificar a comunicação entre visualizações RN em diferentes partes do seu aplicativo nativo, você pode ter várias visualizações desenvolvidas pelo React Native associadas a um único tempo de execução JS. Para fazer isso, em vez de usar <code>RCTRootView bundleURL</code>, use <a href="https://github.com/facebook/react-native/blob/main/packages/react-native/React/Base/RCTBridge.h#94" target="_blank" rel="noreferrer">RCTBridge initWithBundleURL</a> para criar uma ponte e, em seguida, use <code>RCTRootView initWithBridge</code>.</p></div><p>Ao mover seu aplicativo para produção, o <code>NSURL</code> pode apontar para um arquivo pré-empacotado no disco por meio de algo como <code>let mainBundle = NSBundle(URLForResource: &quot;main&quot; withExtension:&quot;jsbundle&quot;)</code>. Você pode usar o script <code>react-native-xcode.sh</code> em <code>node_modules/react-native/scripts/</code> para gerar esse arquivo pré-empacotado.</p><h3 id="_3-conecte" tabindex="-1">3. Conecte <a class="header-anchor" href="#_3-conecte" aria-label="Permalink to &quot;3. Conecte&quot;">​</a></h3><p>Conecte o novo link no menu principal ao método manipulador de eventos recém-adicionado.</p><p><img src="https://github.com/tavaresgerson/reactnativedocbr/assets/22455192/1fa21389-174e-43dd-9e5d-a779d9d40a43" alt="image"></p><div class="tip custom-block"><p class="custom-block-title">Dica</p><p>Uma das maneiras mais fáceis de fazer isso é abrir a visualização no storyboard e clicar com o botão direito no novo link. Selecione algo como o evento <code>Touch Up Inside</code>, arraste-o para o storyboard e selecione o método criado na lista fornecida.</p></div><h3 id="_4-referencia-da-janela" tabindex="-1">4. Referência da janela <a class="header-anchor" href="#_4-referencia-da-janela" aria-label="Permalink to &quot;4. Referência da janela&quot;">​</a></h3><p>Adicione uma referência de janela ao seu arquivo <code>AppDelegate.swift</code>. Por fim, seu <code>AppDelegate</code> deve ser algo semelhante a isto:</p><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UIKit</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@main</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AppDelegate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">UIResponder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">UIApplicationDelegate </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Adicionar referência de janela</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> window: UIWindow</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> application: UIApplication, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">didFinishLaunchingWithOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> launchOptions: [UIApplication.LaunchOptionsKey: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Ponto de substituição para personalização após o lançamento do aplicativo.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ....</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="teste-sua-integracao" tabindex="-1">Teste sua integração <a class="header-anchor" href="#teste-sua-integracao" aria-label="Permalink to &quot;Teste sua integração&quot;">​</a></h2><p>Agora você executou todas as etapas básicas para integrar o React Native ao seu aplicativo atual. Agora iniciaremos o <a href="https://facebook.github.io/metro/" target="_blank" rel="noreferrer">empacotador Metro</a> para construir o pacote <code>index.bundle</code> e o servidor rodando em <code>localhost</code> para servi-lo.</p><h3 id="_1-adicionar-excecao-de-seguranca-de-transporte-de-aplicativos" tabindex="-1">1. Adicionar exceção de segurança de transporte de aplicativos <a class="header-anchor" href="#_1-adicionar-excecao-de-seguranca-de-transporte-de-aplicativos" aria-label="Permalink to &quot;1. Adicionar exceção de segurança de transporte de aplicativos&quot;">​</a></h3><p>A Apple bloqueou o carregamento implícito de recursos HTTP em texto não criptografado. Portanto, precisamos adicionar o seguinte arquivo <code>Info.plist</code> (ou equivalente) do nosso projeto.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&lt;key&gt;NSAppTransportSecurity&lt;/key&gt;</span></span>
<span class="line"><span>&lt;dict&gt;</span></span>
<span class="line"><span>    &lt;key&gt;NSExceptionDomains&lt;/key&gt;</span></span>
<span class="line"><span>    &lt;dict&gt;</span></span>
<span class="line"><span>        &lt;key&gt;localhost&lt;/key&gt;</span></span>
<span class="line"><span>        &lt;dict&gt;</span></span>
<span class="line"><span>            &lt;key&gt;NSTemporaryExceptionAllowsInsecureHTTPLoads&lt;/key&gt;</span></span>
<span class="line"><span>            &lt;true/&gt;</span></span>
<span class="line"><span>        &lt;/dict&gt;</span></span>
<span class="line"><span>    &lt;/dict&gt;</span></span>
<span class="line"><span>&lt;/dict&gt;</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Dica</p><p>O App Transport Security é bom para seus usuários. Certifique-se de reativá-lo antes de lançar seu aplicativo para produção.</p></div><h3 id="_2-execute-o-empacotador" tabindex="-1">2. Execute o empacotador <a class="header-anchor" href="#_2-execute-o-empacotador" aria-label="Permalink to &quot;2. Execute o empacotador&quot;">​</a></h3><p>Para executar seu aplicativo, primeiro você precisa iniciar o servidor de desenvolvimento. Para fazer isso, execute o seguinte comando no diretório raiz do seu projeto React Native:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-BaldF" id="tab-uUfkzDC" checked="checked"><label for="tab-uUfkzDC">npm</label><input type="radio" name="group-BaldF" id="tab-G2XadIt"><label for="tab-G2XadIt">yarn</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span></code></pre></div></div></div><h3 id="_3-execute-o-aplicativo" tabindex="-1">3. Execute o aplicativo <a class="header-anchor" href="#_3-execute-o-aplicativo" aria-label="Permalink to &quot;3. Execute o aplicativo&quot;">​</a></h3><p>Se você estiver usando o Xcode ou seu editor favorito, crie e execute seu aplicativo iOS nativo normalmente. Alternativamente, você pode executar o aplicativo a partir da linha de comando usando o seguinte comando do diretório raiz do seu projeto React Native:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-6liVN" id="tab-H19E0p2" checked="checked"><label for="tab-H19E0p2">npm</label><input type="radio" name="group-6liVN" id="tab-tYv17hX"><label for="tab-tYv17hX">yarn</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ios</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ios</span></span></code></pre></div></div></div><p>Em nosso aplicativo de exemplo, você deverá ver o link para &quot;High Scores&quot; e, ao clicar nele, verá a renderização do seu componente React Native.</p><p>Aqui está a tela inicial do aplicativo nativo:</p><p><img src="`+p+'" alt="image"></p><p>Aqui está a tela de pontuação mais alta do React Native:</p><p><img src="'+l+'" alt="image"></p><p>Se você estiver tendo problemas de resolução de módulo ao executar seu aplicativo, consulte este problema do GitHub para obter informações e possível resolução. Este comentário parecia ser a última resolução possível.</p><h2 id="e-agora" tabindex="-1">E agora? <a class="header-anchor" href="#e-agora" aria-label="Permalink to &quot;E agora?&quot;">​</a></h2><p>Neste ponto, você pode continuar desenvolvendo seu aplicativo normalmente. Consulte nossos documentos de <a href="/docs/debugging.html">depuração</a> e <a href="/docs/running-on-device.html">implantação</a> para saber mais sobre como trabalhar com React Native.</p>',98),d=[h];function c(k,g,u,E,m,v){return i(),a("div",null,d)}const b=s(r,[["render",c]]);export{F as __pageData,b as default};
